{
  "name": "3D Raytracer in C++",
  "tagline": "",
  "body": "\r\n# Raytracer in C++\r\n\r\n#This document is a WIP\r\n\r\nThis document is still a work in progress. \r\n\r\n\r\n### Update 0.1\r\n*So far, this raytracer has the following abilities:*\r\n\r\n1. You can add shapes like spheres, Axis Aligned Bounding Boxes(AABBs), discs or planes in your scene. Add a new object in **initializeObjects()** method inside **main.cpp**.\r\n\r\n2. You can add two types of lights, point lights and directional lights. You can have as many lights as you want in the scene. Add a new light in **initializeLights()** method inside **main.cpp**.\r\n\r\n3. The camera is modeled as a perspective camera, so you can change its **position** and **lookat**.\r\n\r\n4. Anti-aliasing is disabled by default. To enable anti-aliasing, use **useSampling** method of the **Camera** class. \r\n\r\n\r\n### Update 0.2\r\n\r\n1. Triangle shape has been added. \r\n\r\n2. Now you can create multiple test scenes and have objects particular to a scene. Previously, objects container was static and multiple scenes were not allowed. A scene has width, height, camera, objects and lights. \r\n\r\n3. Transformations work. You can rotate, scale and translate objects.\r\n\r\n4. Depth of field works.\r\n\r\n5. Specular shading has been added. Remember: Specular coeff + diffuse coeff + ambience + reflectivity must be equal to 1.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}